Carlos Carrillo-Calderon09/29/2016OSU-CS362Assignment 2
* Over what inputs, if any, does this function throw an Exception?
1) LASTZERO FUNCTION: 
I designed the test suit for this function in way that it threw an Exception when there was no zero value in the input array. This is the test output when none of the array elements was ”0”, such as int[] { 1, 2, 3, 4, 5 }:------------------------------------------------------- T E S T S-------------------------------------------------------Running edu.osu.cs362.WarmupTestLASTZERO FUNCTION TESTS:TEST 1: ZERO IS NOT IN THE INPUT ARRAY!!Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec <<< FAILURE! testLastZero(edu.osu.cs362.WarmupTest)  Time elapsed: 0.003 sec  <<< FAILURE! java.lang.AssertionError: expected:<-1> but was:<1>2) LAST FUNCTION: The nature of the loop condition, for (int i = 0; i < arr.length; i--), makes this function throws an exception with any input combination, except for this one: WarmUp.last(new int[] { 8, 9, 1, 4, 0 }, 8);The reason why this unique input combination doesn’t make this function threw an exception is that the only index the loop can evaluate is arr[0]. So if, for instance, arr[0] = 8, and toFind = 8, so the condition if(arr[i] == toFind) is achieved (but not any other else).So, I designed the test suit for this function in way that it threw an Exception when these 2 different scenarios occur in the input:	WarmUp.last(new int[] { }, 44);WarmUp.last(new int[] { 8, 9, 1, 4, 7 }, 44);These are the test outputs in my WarmupTest.java:------------------------------------------------------- T E S T S-------------------------------------------------------Running edu.osu.cs362.WarmupTestLAST FUNCTION TESTS:OUTPUT 1 = -1TEST 1: THIS ARRAY IS NULL!!Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec <<< FAILURE! testlast(edu.osu.cs362.WarmupTest)  Time elapsed: 0.013 sec  <<< FAILURE! java.lang.AssertionError: expected:<-1> but was:<1>------------------------------------------------------- T E S T S-------------------------------------------------------Running edu.osu.cs362.WarmupTestLAST FUNCTION TESTS:Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.034 sec <<< FAILURE! testLast(edu.osu.cs362.WarmupTest)  Time elapsed: 0.009 sec  <<< ERROR! java.lang.ArrayIndexOutOfBoundsException: -13) POSITIVE FUNCTION:I designed the test suit for this function in way that it threw an Exception only when all the array elements are negative integers. For instance, this is the test output with and input such as int[] { -8, -9, -1, -4, -6, -3 }:------------------------------------------------------- T E S T S-------------------------------------------------------Running edu.osu.cs362.WarmupTestPOSITIVE FUNCTION TESTS:OUTPUT = 0NO POSITIVE ELEMENTS, ABORT MISSION!!Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec <<< FAILURE! testPositive(edu.osu.cs362.WarmupTest)  Time elapsed: 0.004 sec  <<< FAILURE! java.lang.AssertionError: expected:<0> but was:<1>4) ODD_OR_POS FUNCTION:I designed the test suit for this function in way that it threw an Exception when all the array elements are negative integers since the OR condition makes any positive integer, no matter if it’s odd or even, becomes a valid input. Thus, an input such as int[] { -8, -9, -1, -4, -6, -3 } would trigger the exception:------------------------------------------------------- T E S T S-------------------------------------------------------Running edu.osu.cs362.WarmupTestODD_OR_POS FUNCTION TESTS:OUTPUT = 0NO ODD OR POSITIVE ELEMENTS FOUND, ABORT MISSION!!Tests run: 5, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec <<< FAILURE! testOddOrPos(edu.osu.cs362.WarmupTest)  Time elapsed: 0.008 sec  <<< FAILURE! java.lang.AssertionError: expected:<0> but was:<1>* Over what inputs, if any, does this function provide incorrect output?
In my opinion, the only case in which a particular input produces an incorrect input is when we operate the last()function. As explained above, no input can make this function “returns the index of the last occurrence of toFind or -1 if no such element exists”, except when arr[0] = toFind = x (where x is an integer). So any other input can produce the correct output, which would be the last occurrence of toFind.